name: claude-habitat
description: Development environment for Claude Habitat itself

# Habitat tests (run with: claude-habitat test claude-habitat)
# Temporarily disabled to test core functionality
# tests:
#   - tests/test-claude-habitat-inception.sh
#   - tests/test-tools-and-auth.sh

image:
  dockerfile: habitats/claude-habitat/Dockerfile
  tag: claude-habitat:latest

repositories:
  - url: https://github.com/bitmage/claude-habitat
    path: ${WORKDIR}
    branch: main
    shallow: true

env:
  - USER=node
  - WORKDIR=/workspace
  - HABITAT_PATH=${WORKDIR}
  - SYSTEM_PATH=${WORKDIR}/system
  - SHARED_PATH=${WORKDIR}/shared
  - LOCAL_PATH=${WORKDIR}/habitats/claude-habitat
  - SYSTEM_TOOLS_PATH=${SYSTEM_PATH}/tools/bin
  - SHARED_TOOLS_PATH=${SHARED_PATH}/tools/bin
  - LOCAL_TOOLS_PATH=${LOCAL_PATH}/tools/bin
  - PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:${SYSTEM_TOOLS_PATH}:${SHARED_TOOLS_PATH}:${LOCAL_TOOLS_PATH}
  - NODE_ENV=development
  - DOCKER_HOST=unix:///var/run/docker.sock
  - GITHUB_APP_ID=1357221
  - GITHUB_APP_PEM_FILE=${SHARED_PATH}/behold-the-power-of-claude.2025-06-04.private-key.pem

# Directory and file setup
files:
  # Copy system and shared directories for writable access
  - src: ./system
    dest: ${WORKDIR}/system
    after: repos
    owner: "${USER}"
    description: "System tools and configuration (writable copy)"
  - src: ./shared
    dest: ${WORKDIR}/shared
    after: repos
    owner: "${USER}"
    description: "Shared configuration and resources (writable copy)"
  # Create .claude directory structure for Claude to use
  - src: /dev/null
    dest: /home/${USER}/.claude/.keep
    mode: 644
    description: "Ensure .claude directory exists for Claude workspace"
  # Copy Claude credentials from host to container during build (bypass habitat only)
  - src: ~/.claude/.credentials.json
    dest: /.claude/.credentials.json
    mode: 600
    owner: "${USER}"
    description: "Claude credentials for authentication"

volumes:
  # Mount Docker socket for container management
  - /var/run/docker.sock:/var/run/docker.sock

scripts:
  - run_as: root
    commands:
      - |
        # Create /habitat directory structure
        echo "Creating /habitat directory structure..."
        mkdir -p /habitat
        chown node:node /habitat
        chmod 755 /habitat

  - run_as: node
    commands:
      - |
        set -e  # Exit on any error
        cd ${WORKDIR}

        # Fix ownership of workspace (should be owned by node, not root)
        echo "Fixing workspace ownership..."
        sudo chown -R node:node ${WORKDIR}

        # System tools should be pre-installed on host and copied via files: section
        echo "Checking for system tools..."
        ls -la ${WORKDIR}/system/tools/bin/ || echo "No tools found - ensure tools are installed on host"

        # Set up git configuration using install-gitconfig script
        echo "Setting up git configuration..."
        if ${WORKDIR}/system/tools/bin/install-gitconfig; then
          echo "✅ Git configuration applied for user"
        else
          echo "⚠️  Git configuration setup failed"
        fi

        # Set up GitHub authentication using the setup-github-auth tool
        echo "Setting up GitHub authentication..."
        if ${WORKDIR}/system/tools/bin/setup-github-auth; then
          echo "✅ GitHub authentication configured successfully"

          # Configure git to use the credential helper with environment variables
          export GITHUB_APP_ID=1357221
          export GITHUB_APP_PEM_FILE=${WORKDIR}/shared/behold-the-power-of-claude.2025-06-04.private-key.pem
          git config --global credential.helper ${WORKDIR}/system/tools/bin/git-credential-github-app

          echo "✅ Git credential helper configured for GitHub App authentication"
        else
          echo "⚠️  GitHub authentication setup failed - continuing without GitHub access"
        fi

        echo "Claude Habitat setup complete - Docker access will be configured at container startup"

  - run_as: root
    after: repos
    commands:
      - |
        # Setup git configuration from shared (now that files are copied)
        echo "Debug: Checking for gitconfig at ${WORKDIR}/shared/gitconfig"
        ls -la ${WORKDIR}/shared/gitconfig || echo "File does not exist"
        if [ -f ${WORKDIR}/shared/gitconfig ]; then
          echo "Found gitconfig, copying to /etc/gitconfig and /root/.gitconfig"
          cp ${WORKDIR}/shared/gitconfig /etc/gitconfig && echo "Copied to /etc/gitconfig"
          cp ${WORKDIR}/shared/gitconfig /root/.gitconfig && echo "Copied to /root/.gitconfig"
          echo "✅ Git configuration applied system-wide"
          ls -la /etc/gitconfig /root/.gitconfig
        else
          echo "⚠️  No gitconfig found at ${WORKDIR}/shared/gitconfig"
          ls -la ${WORKDIR}/shared/
        fi

  - run_as: node
    after: repos
    commands:
      - |
        set -e  # Exit on any error
        cd ${WORKDIR}

        echo "Installing Claude Habitat dependencies..."
        npm install
        echo "Running tests to verify setup..."
        npm test

        # Fix ownership again after any root operations that may have changed it
        echo "Ensuring correct ownership after setup..."
        sudo chown -R node:node ${WORKDIR}

container:
  startup_delay: 5

# Filesystem verification structure (bypass mode - Meta Claude structure)
# Temporarily disabled problematic git config verification during file hooks testing
verify-fs:
  required_files:
    # Main claude-habitat source files at repository root
    - "${WORKDIR}/.git/config"
    - "${WORKDIR}/CLAUDE.md"
    - "${WORKDIR}/README.md"
    - "${WORKDIR}/package.json"
    - "${WORKDIR}/package-lock.json"
    - "${WORKDIR}/claude-habitat"
    - "${WORKDIR}/claude-habitat.js"
    - "${WORKDIR}/habitats/base/config.yaml"
    - "${WORKDIR}/habitats/discourse/config.yaml"
    - "${WORKDIR}/test/unit/claude-habitat.test.js"
    # Node modules verification (check key directories exist)
    - "${WORKDIR}/node_modules"
    - "${WORKDIR}/node_modules/js-yaml"
    # System infrastructure (excluding .md files which are filtered by .habignore)
    - "${SYSTEM_PATH}/config.yaml"
    - "${SYSTEM_PATH}/tools/install-tools.sh"
    - "${SYSTEM_PATH}/tools/regenerate-github-token.sh"
    - "${SYSTEM_PATH}/tools/tools.yaml"
    # Installed system tools
    - "${SYSTEM_PATH}/tools/bin/setup-github-auth"
    - "${SYSTEM_PATH}/tools/bin/rg"
    - "${SYSTEM_PATH}/tools/bin/fd"
    - "${SYSTEM_PATH}/tools/bin/jq"
    - "${SYSTEM_PATH}/tools/bin/yq"
    - "${SYSTEM_PATH}/tools/bin/gh"
    - "${SYSTEM_PATH}/tools/bin/eza"
    - "${SYSTEM_PATH}/tools/bin/bat"
    - "${SYSTEM_PATH}/tools/bin/install-gitconfig"
    - "${SYSTEM_PATH}/tools/tap-helpers.sh"
    # Shared directory structure
    - "${SHARED_PATH}/config.yaml"
    - "${SHARED_PATH}/gitconfig"
    - "${SHARED_PATH}/behold-the-power-of-claude.2025-06-04.private-key.pem"
    # Git configuration files (all 3 locations) - TEMPORARILY DISABLED FOR FILE HOOKS TESTING
    # - /etc/gitconfig
    # - /root/.gitconfig
    # - /home/node/.gitconfig
    # Claude credentials (copied from host) - TEMPORARILY DISABLED FOR FILE HOOKS TESTING
    # - /home/node/.claude/.credentials.json

# Bypass habitat infrastructure construction (claude-habitat is self-contained)
claude:
  command: claude --dangerously-skip-permissions
  tty: true  # Enable TTY for proper Claude output display (default: true)
  bypass_habitat_construction: true
