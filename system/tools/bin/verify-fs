#!/bin/bash
# verify-fs - Simple filesystem verification
set -e

show_usage() {
  echo "Usage: verify-fs [SCOPE]"
  echo "Verify filesystem structure for habitat environments"
  echo ""
  echo "SCOPE:"
  echo "  system    - Verify system infrastructure files"
  echo "  shared    - Verify shared configuration files" 
  echo "  habitat   - Verify habitat-specific files"
  echo "  all       - Verify all scopes (default)"
  echo ""
  echo "Options:"
  echo "  --help    - Show this help message"
}

# Handle help option
if [[ "$1" == "--help" || "$1" == "-h" ]]; then
  show_usage
  exit 0
fi

SCOPE="${1:-all}"
total_failures=0

# For bypass habitats (claude-habitat), only run habitat scope regardless of parameter
if [ -f "$LOCAL_PATH/config.yaml" ]; then
  if yq eval '.claude.bypass_habitat_construction' "$LOCAL_PATH/config.yaml" 2>/dev/null | grep -q "true"; then
    SCOPE="habitat"
    # Output informational message to stdout as a comment (TAP allows comments)
    echo "# Detected bypass habitat - limiting scope to 'habitat' only"
  fi
fi

source "$SYSTEM_PATH/tools/tap-helpers.sh"

echo "TAP version 13"

check_config() {
    local config="$1" name="$2"
    if [[ ! -f "$config" ]]; then return 0; fi
    
    local files
    files=$(yq eval '.verify-fs.required_files[]' "$config" 2>/dev/null)
    
    while IFS= read -r file; do
        if [[ -n "$file" && "$file" != "null" ]]; then
            expanded=$(eval echo "\"$file\"")
            if [[ -e "$expanded" ]]; then
                tap_ok "File exists: $expanded ($name)"
            else
                tap_not_ok "File missing: $expanded ($name)"
                ((total_failures++))
            fi
        fi
    done <<< "$files"
}

case "$SCOPE" in
    "system") check_config "$SYSTEM_PATH/config.yaml" "system" ;;
    "shared") check_config "$SHARED_PATH/config.yaml" "shared" ;;
    "habitat") check_config "$LOCAL_PATH/config.yaml" "habitat" ;;
    "all") 
        check_config "$SYSTEM_PATH/config.yaml" "system"
        check_config "$SHARED_PATH/config.yaml" "shared" 
        check_config "$LOCAL_PATH/config.yaml" "habitat"
        ;;
esac

echo "1..$test_num"

# Exit with appropriate code
if [[ $total_failures -gt 0 ]]; then
    exit 1
fi